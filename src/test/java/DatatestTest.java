// Generated by Selenium IDE
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

import org.openqa.selenium.JavascriptExecutor;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;
public class DatatestTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @BeforeEach
  public void setUp() {
   // System.setProperty("webdriver.chrome.driver", "/home/amfabian/dev/chromedriver"); 
   // driver = new ChromeDriver();
    //    js = (JavascriptExecutor) driver;
   // vars = new HashMap<String, Object>();
   WebDriverManager.chromedriver().setup();
   ChromeOptions options = new ChromeOptions();
   options.addArguments("--no-sandbox");
   options.addArguments("--disable-dev-shm-usage");
   options.addArguments("--headless");
   driver = new ChromeDriver(options);
   driver.navigate().to("http://localhost:8083");
   driver.manage().window().maximize();
   driver.manage().timeouts().implicitlyWait(120, TimeUnit.MILLISECONDS);

  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void datatest() {
    driver.get("http://localhost:8083/manga/search/digimon");
    driver.manage().window().setSize(new Dimension(1920, 1016));
    {
      WebElement element = driver.findElement(By.cssSelector("pre"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("pre"));
      assert(elements.size() > 0);
    }
  }
}
